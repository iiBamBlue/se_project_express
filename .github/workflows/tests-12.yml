run-name: "Tests Project 12: ${{ github.event.head_commit.message }}"

on:
  push:
    branches:
      - "**"
    tags:
      - "**"

jobs:
  read_sprint_file:
    runs-on: ubuntu-latest
    outputs:
      sprint: ${{ steps.sprint.outputs.SPRINT_NUMBER }}
    steps:
      - name: Set up GitHub Actions
        uses: actions/checkout@v4
      - name: Check if sprint file exist
        run: bash .github/bin/check-sprint.sh
      - name: Get sprint number
        id: sprint
        run: echo "SPRINT_NUMBER=$(cat sprint.txt)" >> $GITHUB_OUTPUT

  test_config:
    runs-on: ubuntu-latest
    needs: read_sprint_file
    if: ${{ needs.read_sprint_file.outputs.sprint == '12' }}
    steps:
      - name: Set up GitHub Actions
        uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Get testing lib
        run: set -eu && git clone --depth 1 https://github.com/practicum-com/tests-12-public.git
      - name: Installing Dependencies
        run: npm i
      - name: Run test config
        run: cd tests-12-public && bash ./bin/test-config.sh

  test_endpoints:
    runs-on: ubuntu-latest
    needs: read_sprint_file
    if: ${{ needs.read_sprint_file.outputs.sprint == '12' }}
    steps:
      - name: Set up GitHub Actions
        uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.6.0
        with:
          mongodb-version: "4.4"
      - name: Get testing lib
        run: set -eu && git clone --depth 1 https://github.com/practicum-com/tests-12-public.git
      - name: Run prepare-test-endpoints
        run: cd tests-12-public && bash ./bin/prepare-test-endpoints.sh
      - name: Installing Dependencies
        run: npm i
      - name: Installing wait-port
        run: npm install -g wait-port
      - name: Start server in background
        run: |
          npm run start &
          SERVER_PID=$!
          echo "Server started with PID: $SERVER_PID"
          echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV
        env:
          MONGODB_URI: mongodb://127.0.0.1:27017/wtwr_db
      - name: Wait for server to be ready
        run: |
          echo "Waiting for server to be ready on port 3001..."
          wait-port -t 30000 127.0.0.1:3001
          echo "Server is ready!"
      - name: Test server connection
        run: |
          echo "Testing server connection..."
          curl -f http://127.0.0.1:3001/users || echo "Connection test failed"
      - name: Run test endpoints
        run: cd tests-12-public && bash ./bin/test-endpoints.sh
      - name: Stop server
        if: always()
        run: |
          if [ ! -z "$SERVER_PID" ]; then
            echo "Stopping server with PID: $SERVER_PID"
            kill $SERVER_PID || true
          fi
